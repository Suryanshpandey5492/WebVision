from typing import Any
from typing_extensions import List, Optional, TypedDict

from langchain_core.messages import BaseMessage, SystemMessage
from playwright.async_api import Page
import os, sys

project_root = os.environ["PROJECT_ROOT"]
sys.path.append(f"{project_root}")

from target_profile import TargetProfile


from typing import TypedDict, List, Any
from playwright.sync_api import Page

class BBox(TypedDict):
    """
    Represents a bounding box around text elements on a webpage.

    Attributes:
        x (float): X-coordinate of the bounding box.
        y (float): Y-coordinate of the bounding box.
        text (str): The text within the bounding box.
        type (str): The type of element detected.
        ariaLabel (str): Accessible label associated with the element.
    """
    x: float
    y: float
    text: str
    type: str
    ariaLabel: str


class AgentState(TypedDict):
    """
    Represents the complete state of an autonomous agent during task execution.

    Attributes:
        page (Page): The current Playwright page instance the agent is interacting with.
        task (str): The specific task or instruction assigned to the agent.
        img (str): Image data associated with the task, if provided (e.g., from LangChain Hub).
        bboxes (List[BBox]): List of bounding boxes detected within the image or document context.
        history (str): A cumulative log of all actions, thoughts, and outputs generated by the agent.
        profile (TargetProfile): Target-specific metadata or configuration required for task execution.
        nonce (str): A unique identifier for the agent's task session to ensure traceability.
        end (bool): Flag indicating whether the agent has completed the task.
        answer (str): Final result or output produced by the agent after completing its reasoning.
        errors (str): Any errors encountered during the execution process.
        storage (UserS3): Storage interface for saving or retrieving task-related assets or intermediate states.
        steps (int): Count of execution or reasoning steps taken by the agent.
        session_dao (Any): Interface or object responsible for managing session persistence and retrieval.
        push_update (Any): Callback or mechanism for broadcasting updates to external systems or UIs.
        page_load_status (Optional[str]): Status of the page load (e.g., "success", "timeout", "failed").
        thoughts (Optional[str]): Agent's internal reasoning or decision-making notes at the current step.
        insights (Optional[str]): Key takeaways, patterns, or useful knowledge derived during task execution.
    """
    page: Page
    task: str
    img: str
    bboxes: List[BBox]
    history: str
    profile_info: TargetProfile
    nonce: str
    end: bool
    answer: str
    errors: str
    steps: int
    session_dao: Any
    push_update: Any
    page_load_status: Optional[str] = None
    thoughts: Optional[str] = ""
    insights: Optional[str] = ""
    VISITED_WEBSITES: Optional[str] = ""